/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#import "AppDelegate.h"

#import "RCTRootView.h"
#import "ReactNativeAutoUpdater.h"
#import "RCTLinkingManager.h"
#import "RCTPushNotificationManager.h"


#define JS_CODE_METADATA_URL @"http://139.196.105.5/iosApp/update.json"

@implementation AppDelegate

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  
  //  //PUSH
  //  if ([[[UIDevice currentDevice] systemVersion] floatValue] >= 8.0)
  //  {
  //    [[UIApplication sharedApplication] registerUserNotificationSettings:[UIUserNotificationSettings
  //                                                                         settingsForTypes:(UIUserNotificationTypeSound | UIUserNotificationTypeAlert | UIUserNotificationTypeBadge)
  //                                                                         categories:nil]];
  //
  //
  //    [[UIApplication sharedApplication] registerForRemoteNotifications];
  //  }
  //  else
  //  {
  //    //这里还是原来的代码
  //    [[UIApplication sharedApplication] registerForRemoteNotificationTypes:
  //     (UIUserNotificationTypeBadge | UIUserNotificationTypeSound | UIUserNotificationTypeAlert)];
  //  }
  
  //;
  
  /**
   * Loading JavaScript code - uncomment the one you want.
   *
   * OPTION 1
   * Load from development server. Start the server from the repository root:
   *
   * $ npm start
   *
   * To run on device, change `localhost` to the IP address of your computer
   * (you can get this by typing `ifconfig` into the terminal and selecting the
   * `inet` value under `en0:`) and make sure your computer and iOS device are
   * on the same Wi-Fi network.
   */
  //模拟器调试
  NSURL *jsCodeLocationWeb = [NSURL URLWithString:@"http://127.0.0.1:8081/index.ios.bundle?platform=ios&dev=true"];
  //
  //  /**
  //   * OPTION 2
  //   * Load from pre-bundled file on disk. The static bundle is automatically
  //   * generated by the "Bundle React Native code and images" build step when
  //   * running the project on an actual device or running the project on the
  //   * simulator in the "Release" build configuration.
  //   */
  
  //真机调试
  //NSURL *jsCodeLocationWeb = [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
  //
  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocationWeb
                                                      moduleName:@"chjApp"
                                               initialProperties:nil
                                                   launchOptions:launchOptions];
  
  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
  UIViewController *rootViewController = [UIViewController new];
  rootViewController.view = rootView;
  self.window.rootViewController = rootViewController;
  [self.window makeKeyAndVisible];
  
  
  
  
  
  
  
  return YES;
  
  
  
  /**
   *  1. Get an instance of ReactNativeAutoUpdater
   *  2. Set self as a delegate.
   *  3. Initialize with MetadataUrl and defaultJSCodeLocation
   *  4. Make a call to checkUpdate
   *  5. Don't forget to implement the delegate methods
   */
  //  NSURL* defaultJSCodeLocation = [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
  //
  //  ReactNativeAutoUpdater* updater = [ReactNativeAutoUpdater sharedInstance];
  //  [updater setDelegate:self];
  //  NSURL* defaultMetadataFileLocation = [[NSBundle mainBundle] URLForResource:@"metadata" withExtension:@"json"];
  //  [updater initializeWithUpdateMetadataUrl:[NSURL URLWithString:JS_CODE_METADATA_URL]
  //                     defaultJSCodeLocation:defaultJSCodeLocation
  //               defaultMetadataFileLocation:defaultMetadataFileLocation ];
  //
  //  [updater setHostnameForRelativeDownloadURLs:@"http://139.196.105.5/iosApp"];
  //  [updater checkUpdate];
  //
  //
  //  NSURL* latestJSCodeLocation = [updater latestJSCodeLocation];
  //
  //  //latestJSCodeLocation = defaultJSCodeLocation;
  //
  //  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
  //  UIViewController *rootViewController = [UIViewController new];
  //  self.window.rootViewController = rootViewController;
  //  [self createReactRootViewFromURL:latestJSCodeLocation];
  //  [self.window makeKeyAndVisible];
  //  return YES;
  //
}

// Required to register for notifications
- (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings
{
  [RCTPushNotificationManager didRegisterUserNotificationSettings:notificationSettings];
}
// Required for the register event.
- (void)application:(UIApplication *)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)deviceToken
{
  //NSLog (@"string is :%@", deviceToken);
  [RCTPushNotificationManager didRegisterForRemoteNotificationsWithDeviceToken:deviceToken];
}
// Required for the notification event.
- (void)application:(UIApplication *)application didReceiveRemoteNotification:(NSDictionary *)notification
{
  [RCTPushNotificationManager didReceiveRemoteNotification:notification];
}
// Required for the localNotification event.
- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification
{
  [RCTPushNotificationManager didReceiveLocalNotification:notification];
}



- (void)createReactRootViewFromURL:(NSURL*)url {
  // Make sure this runs on main thread. Apple does not want you to change the UI from background thread.
  dispatch_async(dispatch_get_main_queue(), ^{
    RCTBridge* bridge = [[RCTBridge alloc] initWithBundleURL:url moduleProvider:nil launchOptions:nil];
    RCTRootView* rootView = [[RCTRootView alloc] initWithBridge:bridge moduleName:@"chjApp" initialProperties:nil];
    self.window.rootViewController.view = rootView;
  });
}
#pragma mark - ReactNativeAutoUpdaterDelegate methods

- (void)ReactNativeAutoUpdater_updateDownloadedToURL:(NSURL *)url {
  UIAlertController *alertController = [UIAlertController
                                        alertControllerWithTitle:NSLocalizedString(@"Update Downloaded", nil)
                                        message:NSLocalizedString(@"An update was downloaded. Do you want to apply the update now?", nil)
                                        preferredStyle:UIAlertControllerStyleAlert];
  
  UIAlertAction *cancelAction = [UIAlertAction
                                 actionWithTitle:NSLocalizedString(@"Cancel", @"Cancel action")
                                 style:UIAlertActionStyleCancel
                                 handler:^(UIAlertAction *action)
                                 {
                                   NSLog(@"Cancel action");
                                 }];
  
  UIAlertAction *okAction = [UIAlertAction
                             actionWithTitle:NSLocalizedString(@"OK", @"OK action")
                             style:UIAlertActionStyleDefault
                             handler:^(UIAlertAction *action)
                             {
                               [self createReactRootViewFromURL: url];
                             }];
  
  [alertController addAction:cancelAction];
  [alertController addAction:okAction];
  
  // make sure this runs on main thread. Apple doesn't like if you change UI from background thread.
  dispatch_async(dispatch_get_main_queue(), ^{
    [self.window.rootViewController presentViewController:alertController animated:YES completion:nil];
  });
  
}

- (void)ReactNativeAutoUpdater_updateDownloadFailed {
  NSLog(@"Update failed to download");
}
- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url
  sourceApplication:(NSString *)sourceApplication annotation:(id)annotation
{
  return [RCTLinkingManager application:application openURL:url
                      sourceApplication:sourceApplication annotation:annotation];
}

@end
